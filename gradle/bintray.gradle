/*
 * Copyright (c) 2016 Nike, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

def createPomOutputLocation = "${project.buildDir}/libs/pom.xml"
def bintrayUser = project.hasProperty('bintrayUser') ? project.bintrayUser : System.getenv('BINTRAY_USER') ?: ''
def bintrayKey = project.hasProperty('bintrayKey') ? project.bintrayKey : System.getenv('BINTRAY_KEY') ?: ''
def bintrayVersion = "$version"

bintray {
    user = bintrayUser
    key = bintrayKey
    dryRun = false
    publish = true
    publications = ['mavenInfo']

    pkg {
        repo = 'maven'
        name = 'cerberus-client'
        userOrg = 'nike'
        licenses = ['Apache-2.0']
        websiteUrl = 'https://github.com/Nike-Inc/cerberus-java-client'
        issueTrackerUrl = 'https://github.com/Nike-Inc/cerberus-java-client/issues'
        vcsUrl = 'https://github.com/Nike-Inc/cerberus-java-client.git'
        githubRepo = 'Nike-Inc/cerberus-java-client'
        githubReleaseNotesFile = 'CHANGELOG.md'

        version {
            name = bintrayVersion

            gpg {
                sign = true
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

task createPom << {
    pom {
        project {
            groupId groupId
            artifactId artifactId
            version version
            name artifactId
            description "Cerberus Client"
            url 'https://github.com/Nike-Inc/cerberus-java-client'
            inceptionYear '2016'
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/Nike-Inc/cerberus-java-client'
                connection 'git@github.com:Nike-Inc/cerberus-java-client.git'
            }
            organization {
                name 'Nike'
                url 'http://nike-inc.github.io'
            }
        }
    }.writeTo(createPomOutputLocation)
}

publishing {
    publications {
        mavenInfo(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                // The pom produced by this task is questionable - ALL dependencies are set to runtime rather than how we set them up in the build.gradle files.
                //      Unfortunately we need to use this task anyway for the bintray gradle plugin.
                //      Therefore we'll just wipe out the pom this produces and use one created by the normal maven plugin (see the createPom task) instead.
                asString().delete(0, Integer.MAX_VALUE).append(new File(createPomOutputLocation).text)
            }
        }
    }
}

bintrayUpload.dependsOn(createPom)
assemble.finalizedBy(createPom)