/*
 * Copyright (c) 2017 Nike, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

repositories {
    jcenter()
}

def AWS_SDK_VERSION = '1.11.123'
def VAULT_CLIENT_COORDINATES = "com.nike:vault-client:2.1.0"

//noinspection GroovyAssignabilityCheck
dependencies {

/***********************************************************************************************************************
 * IMPORTANT!  This project produces a fat jar!                                                                        *
 *                                                                                                                     *
 * If you add a new compile dependency to this library and do not also verify that it gets shaded                      *
 * you will introduce a transitive dependency nightmare for users of this library.                                     *
 *                                                                                                                     *
 * We do this because AWS constantly breaks backwards compatibility of their SDK with minor version releases.          *
 * We do not want to dictate what SDK version users of Cerberus should use.                                            *
 ***********************************************************************************************************************/

    // these will be added to the POM and excluded from the shadow jar
    shadow VAULT_CLIENT_COORDINATES
    compile VAULT_CLIENT_COORDINATES
    shadow "joda-time:joda-time:2.8.1"
    shadow "org.apache.commons:commons-lang3:3.4"
    shadow "org.slf4j:slf4j-api:1.7.25"

    compile "com.squareup.okhttp3:okhttp:3.9.0"

    compile "com.amazonaws:aws-java-sdk-core:${AWS_SDK_VERSION}"
    compile "com.amazonaws:aws-java-sdk-kms:${AWS_SDK_VERSION}"
    compile "com.amazonaws:aws-java-sdk-lambda:${AWS_SDK_VERSION}"

    testRuntime 'org.slf4j:slf4j-simple:1.7.25'
    testCompile "junit:junit:4.12"
    testCompile ("org.mockito:mockito-core:1.10.19") {
        exclude group: 'org.hamcrest'
    }
    testCompile ("org.powermock:powermock-api-mockito:1.6.4") {
        exclude group: 'org.hamcrest'
    }
    testCompile ("org.powermock:powermock-module-junit4:1.6.4") {
        exclude group: 'org.hamcrest'
    }
    testCompile "org.assertj:assertj-core:2.3.0"
    testCompile "com.squareup.okhttp3:mockwebserver:3.7.0"
}

shadowJar {
    classifier = ''
    dependencies {
      // exclude these from the shadow jar
      project.configurations.shadow.each {
        exclude it.name
      }
    }
    relocate('com.', 'cerberus.com.') {
        exclude 'com.nike.**'
        exclude 'com.google.**'
    }
    relocate('org.', 'cerberus.org.') {
        exclude 'org.slf4j.**'
        exclude 'org.joda.**'
        exclude 'org.apache.commons.lang3.**'
    }
    relocate 'models.', 'cerberus.models.'
    relocate 'mozilla.', 'cerberus.mozilla.'
    relocate 'software.', 'cerberus.software.'
}

shadowJar.dependsOn copyProjectVersion